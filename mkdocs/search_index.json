{
    "docs": [
        {
            "location": "/",
            "text": "Maven project for generating a Java wrapper around \nrsync\n \nfor Linux, Mac OSX and Windows. \n\n\nFor Windows, binaries are included in the jars and \nrsync4j\n \nwill set up an environment in the user's home directory (\n%USERPROFILE%\\rsync4j\n)\non first usage (can be customized, see Section \nCustom location\n). \n\n\nNow supports 32-bit and 64-bit platforms.",
            "title": "Home"
        },
        {
            "location": "/commandline/",
            "text": "The options of the \ncom.github.fracpete.rsync4j.RSync\n tool are modeled after\nthe \nrsync\n executable itself. Here is the help screen:\n\n\nusage: com.github.fracpete.rsync4j.RSync\n       [-h] [-v] [--info INFO] [--debug DEBUG] [--msgs2stderr] [-q]\n       [--no-motd] [-c] [-a] [-r] [-R] [--no-implied-dirs] [-b]\n       [--backup-dir BACKUPDIR] [--suffix SUFFIX] [-u] [--inplace]\n       [--append] [--append-verify] [-d] [-l] [-L] [--copy-unsafe-links]\n       [--safe-links] [--munge-links] [-k] [-K] [-H] [-p] [-E]\n       [--chmod CHMOD] [-X] [-o] [-g] [--devices] [--specials] [-t] [-O]\n       [-J] [--super] [--fake-super] [-S] [--preallocate] [-n] [-W] [-x]\n       [-B BLOCKSIZE] [-e RSH] [--rsync-path RSYNCPATH] [--existing]\n       [--ignore-existing] [--remove-source-files] [--delete]\n       [--delete-before] [--delete-during] [--delete-delay]\n       [--delete-after] [--delete-excluded] [--ignore-missing-args]\n       [--delete-missing-args] [--ignore-errors] [--force]\n       [--max-delete MAXDELETE] [--max-size MAXSIZE] [--min-size MINSIZE]\n       [--partial] [--partial-dir PARTIALDIR] [--delay-updates] [-m]\n       [--numeric-ids] [--usermap USERMAP] [--groupmap GROUPMAP]\n       [--chown CHOWN] [--timeout TIMEOUT] [--contimeout CONTIMEOUT] [-I]\n       [-M REMOTEOPTION] [--size-only] [--modify-window MODIFYWINDOW]\n       [-T TEMPDIR] [-y] [--compare-dest COMPAREDEST]\n       [--copy-dest COPYDEST] [--link-dest LINKDEST] [-z]\n       [--compress-level COMPRESSLEVEL] [--skip-compress SKIPCOMPRESS] [-C]\n       [-f FILTER] [--exclude EXCLUDE] [--exclude-from EXCLUDEFROM]\n       [--include INCLUDE] [--include-from INCLUDEFROM]\n       [--files-from FILESFROM] [-0] [-s] [--address ADDRESS] [--port PORT]\n       [--sockopts SOCKOPTS] [--blocking-io] [--stats] [-8]\n       [--human-readable] [--progress] [-i] [--out-format OUTFORMAT]\n       [--log-file LOGFILE] [--log-file-format LOGFILEFORMAT]\n       [--password-file PASSWORDFILE] [--list-only] [--bwlimit BWLIMIT]\n       [--outbuf OUTBUF] [--write-batch WRITEBATCH]\n       [--only-write-batch ONLYWRITEBATCH] [--read-batch READBATCH]\n       [--protocol PROTOCOL] [--iconv ICONV] [--checkum-seed CHECKSUMSEED]\n       [-4] [-6] [--version] [--output-commandline] [--maxtime MAXTIME] src\n       dest\n\npositional arguments:\n  src                    The local or remote  source  path (path or [user@]\n                         host:path)\n  dest                   The local  or  remote  destination  path  (path or\n                         [user@]host:path)\n\noptional arguments:\n  -h, --help             show this help message and exit\n  -v, --verbose          increase verbosity\n  --info INFO            fine-grained informational verbosity\n  --debug DEBUG          fine-grained debug verbosity\n  --msgs2stderr          special output handling for debugging\n  -q, --quiet            suppress non-error messages\n  --no-motd              suppress daemon-mode MOTD\n  -c, --checksum         skip based on checksum, not mod-time & size\n  -a, --archive          archive mode; equals -rlptgoD (no -H,-A,-X)\n  -r, --recursive        recurse into directories\n  -R, --relative         use relative path names\n  --no-implied-dirs      use relative path names\n  -b, --backup           make backups (see --suffix & --backup-dir)\n  --backup-dir BACKUPDIR\n                         make backups into hierarchy based in DIR\n  --suffix SUFFIX        set backup suffix (default ~ w/o --backup-dir)\n  -u, --update           skip files that are newer on the receiver\n  --inplace              update destination files in-place\n  --append               append data onto shorter files\n  --append-verify        like --append, but with old data in file checksum\n  -d, --dirs             transfer directories without recursing\n  -l, --links            copy symlinks as symlinks\n  -L, --copy-links       transform symlink into referent file/dir\n  --copy-unsafe-links    only \"unsafe\" symlinks are transformed\n  --safe-links           ignore symlinks that point outside the source tree\n  --munge-links          munge symlinks to make them safer (but unusable)\n  -k, --copy-dirlinks    transform symlink to a dir into referent dir\n  -K, --keep-dirlinks    treat symlinked dir on receiver as dir\n  -H, --hard-links       preserve hard links\n  -p, --perms            preserve permissions\n  -E, --executability    preserve the file's executability\n  --chmod CHMOD          affect file and/or directory permissions\n  -X, --xattrs           preserve extended attributes\n  -o, --owner            preserve owner (super-user only)\n  -g, --group            preserve group\n  --devices              preserve device files (super-user only)\n  --specials             preserve special files\n  -t, --times            preserve modification times\n  -O, --omit-dir-times   omit directories from --times\n  -J, --omit-link-times  omit symlinks from --times\n  --super                receiver attempts super-user activities\n  --fake-super           store/recover privileged attrs using xattrs\n  -S, --sparse           handle sparse files efficiently\n  --preallocate          allocate dest files before writing them\n  -n, --dry-run          perform a trial run with no changes made\n  -W, --whole-file       copy files whole (without delta-xfer algorithm)\n  -x, --one-file-system  don't cross filesystem boundaries\n  -B BLOCKSIZE, --block-size BLOCKSIZE\n                         force a fixed checksum block-size\n  -e RSH, --rsh RSH      specify the remote shell to use\n  --rsync-path RSYNCPATH\n                         specify the rsync to run on the remote machine\n  --existing             skip creating new files on receiver\n  --ignore-existing      skip updating files that already exist on receiver\n  --remove-source-files  sender removes synchronized files (non-dirs)\n  --delete               delete extraneous files from destination dirs\n  --delete-before        receiver deletes before transfer, not during\n  --delete-during        receiver deletes during the transfer\n  --delete-delay         find deletions during, delete after\n  --delete-after         receiver deletes after transfer, not during\n  --delete-excluded      also delete excluded files from destination dirs\n  --ignore-missing-args  ignore missing source args without error\n  --delete-missing-args  delete missing source args from destination\n  --ignore-errors        delete even if there are I/O errors\n  --force                force deletion of directories even if not empty\n  --max-delete MAXDELETE\n                         don't delete more than NUM files\n  --max-size MAXSIZE     don't transfer any file larger than SIZE\n  --min-size MINSIZE     don't transfer any file smaller than SIZE\n  --partial              keep partially transferred files\n  --partial-dir PARTIALDIR\n                         put a partially transferred file into DIR\n  --delay-updates        put all updated files into place at transfer's end\n  -m, --prune-empty-dirs\n                         prune empty directory chains from the file-list\n  --numeric-ids          don't map uid/gid values by user/group name\n  --usermap USERMAP      custom username mapping\n  --groupmap GROUPMAP    custom groupname mapping\n  --chown CHOWN          simple username/groupname mapping\n  --timeout TIMEOUT      set I/O timeout in seconds\n  --contimeout CONTIMEOUT\n                         set daemon connection timeout in seconds\n  -I, --ignore-times     don't skip files that match in size and mod-time\n  -M REMOTEOPTION, --remote-option REMOTEOPTION\n                         send OPTION to the remote side only\n  --size-only            skip files that match in size\n  --modify-window MODIFYWINDOW\n                         compare mod-times with reduced accuracy\n  -T TEMPDIR, --temp-dir TEMPDIR\n                         create temporary files in directory DIR\n  -y, --fuzzy            find similar file for basis if no dest file\n  --compare-dest COMPAREDEST\n                         also compare destination files relative to DIR\n  --copy-dest COPYDEST   ... and include copies of unchanged files\n  --link-dest LINKDEST   hardlink to files in DIR when unchanged\n  -z, --compress         compress file data during the transfer\n  --compress-level COMPRESSLEVEL\n                         explicitly set compression level\n  --skip-compress SKIPCOMPRESS\n                         skip compressing files with a suffix in LIST\n  -C, --cvs-exclude      auto-ignore files the same way CVS does\n  -f FILTER, --filter FILTER\n                         add a file-filtering RULE\n  --exclude EXCLUDE      exclude files matching PATTERN\n  --exclude-from EXCLUDEFROM\n                         read exclude patterns from FILE\n  --include INCLUDE      include files matching PATTERN\n  --include-from INCLUDEFROM\n                         read include patterns from FILE\n  --files-from FILESFROM\n                         read list of source-file names from FILE\n  -0, --from0            all *-from/filter files are delimited by 0s\n  -s, --protect-args     no space-splitting; only wildcard special-chars\n  --address ADDRESS      bind address for outgoing socket to daemon\n  --port PORT            specify double-colon alternate port number\n  --sockopts SOCKOPTS    specify custom TCP options\n  --blocking-io          use blocking I/O for the remote shell\n  --stats                give some file-transfer stats\n  -8, --8-bit-output     leave high-bit chars unescaped in output\n  --human-readable       output numbers in a human-readable format\n  --progress             show progress during transfer\n  -i, --itemize-changes  output a change-summary for all updates\n  --out-format OUTFORMAT\n                         output updates using the specified FORMAT\n  --log-file LOGFILE     log what we're doing to the specified FILE\n  --log-file-format LOGFILEFORMAT\n                         log updates using the specified FMT\n  --password-file PASSWORDFILE\n                         read daemon-access password from FILE\n  --list-only            list the files instead of copying them\n  --bwlimit BWLIMIT      limit socket I/O bandwidth\n  --outbuf OUTBUF        set output  buffering  to  None,  Line,  or  Block\n                         (N|L|B)\n  --write-batch WRITEBATCH\n                         write a batched update to FILE\n  --only-write-batch ONLYWRITEBATCH\n                         like --write-batch but w/o updating destination\n  --read-batch READBATCH\n                         read a batched update from FILE\n  --protocol PROTOCOL    force an older protocol version to be used\n  --iconv ICONV          request charset conversion of filenames\n  --checkum-seed CHECKSUMSEED\n                         set block/file checksum seed (advanced)\n  -4, --ipv4             prefer IPv4\n  -6, --ipv6             prefer IPv6\n  --version              print version number\n  --output-commandline   output the command-line  generated  for  the rsync\n                         binary\n  --maxtime MAXTIME      set the maximum time for  rsync  process to run in\n                         seconds before getting killed",
            "title": "Command-line"
        },
        {
            "location": "/java/",
            "text": "Here is an example of configuring and running \nrsync\n from within Java, only \noutputting the data from stdout/stderr after the process completes: \n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.CollectingProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\");\n  .destination(\"/other/place/\");\n  .recursive(true);\n// or if you prefer using commandline options:\n// rsync.setOptions(new String[]{\"-r\", \"/one/place/\", \"/other/place/\"});\nCollectingProcessOutput output = rsync.execute();\nSystem.out.println(output.getStdOut());\nSystem.out.println(\"Exit code: \" + output.getExitCode());\nif (output.getExitCode() > 0)\n  System.err.println(output.getStdErr());\n\n\n\n\nThis example outputs stdout/stderr from the \nrsync\n process as it occurs, \nrather than waiting till the end:\n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\");\n  .destination(\"/other/place/\");\n  .archive(true)\n  .delete(true);\nConsoleOutputProcessOutput output = new ConsoleOutputProcessOutput();\noutput.monitor(rsync.builder());\n\n\n\n\nIf you want to process the output (stdout/stderr) from the rsync process\nyourself, then you can use \nStreamingProcessOutput\n instead of \n\nConsoleOutputProcessOutput\n. You only need to supply an object of a class\nimplementing the \nStreamingProcessOwner\n interface. Below is an example\nthat simply prefixes the output with either \n[OUT]\n or \n[ERR]\n: \n\n\nimport com.github.fracpete.rsync4j.RSync;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOutputType;\nimport com.github.fracpete.processoutput4j.core.StreamingProcessOwner;\nimport com.github.fracpete.processoutput4j.output.StreamingProcessOutput;\n\npublic static class Output implements StreamingProcessOwner {\n  public StreamingProcessOutputType getOutputType() {\n    return StreamingProcessOutputType.BOTH;\n  }\n  public void processOutput(String line, boolean stdout) {\n    System.out.println((stdout ? \"[OUT] \" : \"[ERR] \") + line);\n  }\n}\n\n...\nRSync rsync = new RSync()\n  .source(\"/one/place/\");\n  .destination(\"/other/place/\");\n  .recursive(true)\n  .verbose(true);\nStreamingProcessOutput output = new StreamingProcessOutput(new Output());\noutput.monitor(rsync.builder());",
            "title": "Java"
        },
        {
            "location": "/windows/",
            "text": "On first execution, these binaries will get placed in the following directory\n(on a per user basis):\n\n\n%USERPROFILE%\\rsync4j\n\n\n\n\nBelow that directory there are \nhome/%USERNAME%/.ssh\n and \nbin\n.\n\n\nSSH keys\n\n\nYou can place your ssh key pairs in the following directory:\n\n\n%USERPROFILE%\\rsync4j\\home\\%USERNAME%\\.ssh\n\n\n\n\nBinaries (32-bit)\n\n\nrsync4j\n uses the \nrsync.exe\n and \nssh.exe\n executables and their dependencies\nfrom the 32-bit version of \ncywgin\n.\n\n\nThe dependencies, as of 2018-02-25, are as follows:\n\n\n\n\ncygcom_err-2.dll\n\n\ncygcrypto-1.0.0.dll\n\n\ncyggcc_s-1.dll\n\n\ncyggssapi_krb5-2.dll\n\n\ncygiconv-2.dll\n\n\ncygintl-8.dll\n\n\ncygk5crypto-3.dll\n\n\ncygkrb5-3.dll\n\n\ncygkrb5support-0.dll\n\n\ncygpopt-0.dll\n\n\ncygssp-0.dll\n\n\ncygwin1.dll\n\n\ncygz.dll\n\n\n\n\nYou can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:\n\n\nrsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86\n\n\n\n\nAnd list the DLLs in the following text file:\n\n\nrsync4j-windows-x86/src/main/resources/com/github/fracpete/rsync4j/windows-x86/libraries.txt\n\n\n\n\nBinaries (64-bit)\n\n\nrsync4j\n uses the \nrsync.exe\n and \nssh.exe\n executables and their dependencies\nfrom the 64-bit version of \ncywgin\n.\n\n\nThe dependencies, as of 2018-02-25, are as follows:\n\n\n\n\ncygcom_err-2.dll\n\n\ncygcrypto-1.0.0.dll\n\n\ncyggcc_s-seh-1.dll\n\n\ncyggssapi_krb5-2.dll\n\n\ncygiconv-2.dll\n\n\ncygintl-8.dll\n\n\ncygk5crypto-3.dll\n\n\ncygkrb5-3.dll\n\n\ncygkrb5support-0.dll\n\n\ncygssp-0.dll\n\n\ncygwin1.dll\n\n\ncygz.dll\n\n\n\n\nYou can easily determine the dependencies by running the executables. Windows\nwill automatically pop up a dialog mentioning any DLLs that are missing. Place\nany missing DLLs in the following directory:\n\n\nrsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64\n\n\n\n\nAnd list the DLLs in the following text file:\n\n\nrsync4j-windows-x86_64/src/main/resources/com/github/fracpete/rsync4j/windows-x86_64/libraries.txt\n\n\n\n\nPaths\n\n\nSince cygwin is being used, local paths get converted to cywgin notation.\n\n\nFor example:\n\n\nC:\\some\\path\\blah.txt\n\n\n\n\nWill get automatically get converted to:\n\n\n/cygdrive/c/some/path/blah.txt\n\n\n\n\nCustom location\n\n\nIt is possible to use another location than \n%USERPROFILE%\\rsync4j\n. You only\nhave to set up the \nRSYNC4J_HOME\n environment variable to point to the top-level\ndirectory (doesn't have to exist) where you want to house the binaries and keys.",
            "title": "Windows"
        },
        {
            "location": "/faq/",
            "text": "Q\n I'm trying to sync, but it just sits there and does nothing!\n\n\nA\n Since \nrsync4j\n is not interactive, you will have to connect to the \n  remote host at least once before to add the host to the \nknown_hosts\n file.\n\n\nQ\n How do I use a specific public key pair?\n\n\nA\n You can let \nssh\n know what identity file to use using rsync's \n--rsh\n \n  option and ssh's \n-i\n option, e.g.: \nrsync --rsh=\"ssh -i /some/where/id_rsa\" ...",
            "title": "FAQ"
        },
        {
            "location": "/maven/",
            "text": "Add the following artifact to your dependencies of your \npom.xml\n:\n\n\n    <dependency>\n      <groupId>com.github.fracpete</groupId>\n      <artifactId>rsync4j-all</artifactId>\n      <version>3.1.2-9</version>\n    </dependency>",
            "title": "Maven"
        },
        {
            "location": "/releases/",
            "text": "3.1.2-9 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-8 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-7 (\nzip\n, \nspring-boot\n)\n\n\n3.1.2-6 (\nzip\n)\n\n\n3.1.2-5 (\nzip\n)",
            "title": "Releases"
        }
    ]
}